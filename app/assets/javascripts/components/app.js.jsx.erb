var ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;

var App = React.createClass({
  render: function() {
    return (
      <div>
        <nav className="navbar navbar-default">
          <div className="container">
            <div className="navbar-header">
              <ReactRouter.Link className="navbar-brand" to='/'>
                PSENG EKG
              </ReactRouter.Link>
              <ul className="nav navbar-nav">
                <li>
                  <img src="<%= asset_path('ecg.gif') %>" alt="ECG" height="40" />
                </li>
              </ul>
            </div>
            <div className="collapse navbar-collapse">
              <ul className="nav navbar-nav navbar-right">
                <li>
                  <ReactRouter.Link to='/applications/new'>
                    <span className="fa fa-plus" /> New Application
                  </ReactRouter.Link>
                </li>
              </ul>
            </div>
          </div>
        </nav>
        <div id="content" className='container'>
          <ReactCSSTransitionGroup transitionName="example" transitionAppear={true}>
            <ReactRouter.RouteHandler />
          </ReactCSSTransitionGroup>
        </div>
      </div>
    );
  }
});



// getInitialState: function() {
//   return {
//     tasks: [],
//     application: {}
//   };
// },
// loadTasks: function(application) {
//   this.setState({application: application});
//   var url = '/tasks.json?application_id=' + application.id
//   $.ajax({
//     url: url,
//     dataType: 'json',
//     type: 'GET',
//     success: function(data) {
//       this.setState({tasks: data});
//     }.bind(this),
//     error: function(xhr, status, err) {
//       console.error(url, status, err.toString());
//     }.bind(this)
//   });
// },
// render: function() {
//   var _this = this;
//   var applicationNodes = [].map(function (application, index) {
//     var liClass = 'react-li';
//     if (_this.state.application.id == application.id) {
//       liClass = liClass + '-active';
//     }

//     return (
//       <Application onApplicationClick={_this.loadTasks} name={application.name} id={application.id} key={application.id} liClass={liClass}/>
//     )
//   });



//   return (
//     <div className="row">
//       <div className="col-md-3">
//         <ul className="nav nav-pills nav-stacked">
//           {applicationNodes}
//         </ul>
//       </div>
//       <div className="col-md-9">
//         <h3>{this.state.application.name ? this.state.application.name : '<- Please select an application.'}</h3>
//         {taskNodes}
//       </div>
//     </div>
//   );
// }